<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Remove Background</title>
  <style>
    body {
      font-family: sans-serif;
      text-align: center;
      margin-top: 50px;
      background-color: #e0f7fa;
    }
    h1 {
      color: #000;
    }
    .upload-box {
      background: #4dd0e1;
      padding: 20px;
      border-radius: 20px;
      display: inline-block;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
    }
    input, button {
      margin: 10px;
      padding: 10px;
    }
    img {
      max-width: 100%;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <h1>Image Background Removal Tool</h1>

  <div class="upload-box">
    <input type="file" id="imageInput" accept="image/*">
    <button onclick="removeBackground()">Remove Background</button>
  </div>

  <div id="loader" style="margin-top: 20px; display: none;">
    <p>Processing image, please wait...</p>
    <div style="width: 40px; height: 40px; border: 5px solid lightgray; border-top: 5px solid black; border-radius: 50%; animation: spin 1s linear infinite;"></div>
  </div>

  <div id="result"></div>

  <script>
    async function removeBackground() {
      const fileInput = document.getElementById('imageInput');
      const file = fileInput.files[0];
      const loader = document.getElementById('loader');
      const result = document.getElementById('result');

      if (!file) return alert('Please select an image.');

      loader.style.display = 'block';
      result.innerHTML = '';

      const formData = new FormData();
      formData.append('image_file', file);
      formData.append('size', 'auto');

      try {
        const response = await fetch('https://api.remove.bg/v1.0/removebg', {
          method: 'POST',
          headers: {
            'X-Api-Key': 'a7wFtrTFotXPARPR4EEM9bNn'
          },
          body: formData
        });

        loader.style.display = 'none';

        if (!response.ok) {
          alert('Failed to remove background. Check API key or quota.');
          return;
        }

        const blob = await response.blob();
        const url = URL.createObjectURL(blob);
        result.innerHTML = `
          <img src="${url}" alt="Processed Image">
          <br><a href="${url}" download="no-bg.png">Download PNG</a>
        `;
      } catch (error) {
        loader.style.display = 'none';
        alert('Something went wrong!');
        console.error(error);
      }
    }

    // CSS Spinner animation
    const style = document.createElement('style');
    style.textContent = `
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    `;
    document.head.appendChild(style);
  </script>
</body>
</html>